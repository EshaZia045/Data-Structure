#include <iostream>
using namespace std;

void merge(int array[], int left, int mid, int right)
{
    int i = left;
    int j = mid + 1;
    int k = 0;
    int size = right - left + 1;
    int temp[size];  // Temporary array

    while (i <= mid && j <= right)
    {
        if (array[i] < array[j])
            temp[k++] = array[i++];
        else
            temp[k++] = array[j++];
    }

    while (i <= mid)
        temp[k++] = array[i++];

    while (j <= right)
        temp[k++] = array[j++];

    for (int t = 0; t < k; t++)
        array[left + t] = temp[t];
}

void mergeSort(int array[], int left, int right)
{
    if (left < right)
    {
        int mid = (left + right) / 2;
        mergeSort(array, left, mid);
        mergeSort(array, mid + 1, right);
        merge(array, left, mid, right);
    }
}

int main()
{
    int array[11] = {29, 10, 14, 37, 14, 7, 25, 18, 5, 20, 33};
    int n = 11;

    cout << "Original array:\n";
    for (int i = 0; i < n; i++)
        cout << array[i] << " ";
    cout << "\n";

    mergeSort(array, 0, n - 1);

    cout << "Sorted array:\n";
    for (int i = 0; i < n; i++)
        cout << array[i] << " ";
    cout << "\n";

    return 0;
}
